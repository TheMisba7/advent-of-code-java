/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package aoc;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.UncheckedIOException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import static java.util.stream.Collectors.toList;

public class App {

    private static final Map<Integer, Day> DAYS;

    static {
        DAYS = new HashMap<>();
        DAYS.put(1, new Day01());
        DAYS.put(2, new Day02());
        DAYS.put(3, new Day03());
        DAYS.putIfAbsent(4, new Day04());
    }

    private static List<String> loadInput(int day){
        String paddedDay = String.valueOf(day);
        if(day < 10) {
            paddedDay = "0" + day;
        }
        String fileName = "day" + paddedDay + ".txt";

        try(BufferedReader r = new BufferedReader(new InputStreamReader(ClassLoader.getSystemResourceAsStream(fileName)))){
            return r.lines().collect(toList());
        } catch(IOException e){
            throw new UncheckedIOException(e);
        }
    }

    public static void main(String[] args) {
        int day = 1;
        if(args.length != 0){
            day = Integer.parseInt(args[0]);
        }

        int part = 1;
        if(args.length > 1){
            part = Integer.parseInt(args[1]);
        }
        run(day, part);

    }

    private static void run(int day, int part) {
        List<String> input = loadInput(day);
        String result;
        Day dayToRun = DAYS.get(day);
        long startTime;
        if(part == 1) {
            startTime = System.currentTimeMillis();
            result = dayToRun.part1(input);
        } else {
            startTime = System.currentTimeMillis();
            result = dayToRun.part2(input);
        }
        long endTime = System.currentTimeMillis() - startTime;

        System.out.println("Day " + day + " | part " + part + " result: " + result);
        System.out.println("Execution time in milliseconds: " + endTime);
    }
}
